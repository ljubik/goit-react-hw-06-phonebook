{"version":3,"sources":["redux/actions/userAction.js","redux/orders/operations.js","redux/orders/selectors.js","components/ContactList/ContactList.module.css","redux/modal/actions.js","components/Filter/Filter.module.css","components/Main/Main.js","components/Main/Main.module.css","components/ContactForm/ContactForm.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","redux/actions/filterAction.js","App.js","redux/orders/actions.js","redux/reducers/userReducers.js","redux/reducers/allUsersReducer.js","redux/reducers/filterReducer.js","redux/modal/reducers.js","redux/orders/reducers.js","redux/store.js","routes.js","index.js"],"names":["addUser","userObject","type","payload","deleteUser","email","addNumber","numObject","deleteNumber","id","createNumber","filterName","nameObject","axios","defaults","baseURL","getOrders","dispatch","getOrdersRequest","get","then","data","console","log","getOrdersSuccess","catch","error","getOrdersError","addOrder","contacts","addOrderRequest","post","addOrderSuccess","addOrderError","deleteOrder","deleteOrderRequest","delete","deleteOrderSuccess","deleteOrderError","store","filterOrder","filteredOrders","createSelector","allOrders","filter","toLowerCase","name","includes","module","exports","getQueryVAlue","createAction","getFetchCocktails","changeShowModal","Main","title","to","exact","className","style","center","ContactForm","state","tel","handleChange","e","getValue","props","target","setState","value","handleSubmit","preventDefault","el","some","c","alert","addMyOrder","formReset","this","handleDelete","filterSubmit","myOrders","onSubmit","form","onChange","placeholder","required","Component","mapDispatchToProps","userAction","operations","connect","delnum","deleteMyOrder","filteredContacts","getMyOrders","length","list","element","map","listLi","listBtn","onClick","Filter","getMyFilter","onInput","defaultValue","filterAction","claearFilter","App","addContact","prev","toGetFilteredContacts","getList","toDelete","contactLocalStorege","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filterContact","ContactList","adnum","addUserAction","myChangeModal","actions","userReducer","action","newStateNumber","init","allUsersReducer","newS","newSt","elem","newAddN","newDelN","filterReducer","modalReducer","createReducer","_","orderReducer","order","combineReducers","user","showModal","reducers","mycontacts","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","subscribe","getState","persistStore","routes","key","uuid","path","component","lazy","private","restricted","ReactDOM","render","StrictMode","fallback","route","document","getElementById"],"mappings":"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","file":"static/js/main.9221b5b7.chunk.js","sourcesContent":["const addUser = (userObject) => {\n  return {\n    type: \"ADD_USER\",\n    payload: userObject,\n  };\n};\n\nconst deleteUser = (email) => {\n  return {\n    type: \"DELETE_USER\",\n    payload: email,\n  };\n};\n\nconst addNumber = (numObject) => {\n  return {\n    type: \"ADD_NUMBER\",\n    payload: numObject,\n  };\n};\n\nconst deleteNumber = (id) => {\n  return {\n    type: \"DELETE_NUMBER\",\n    payload: id,\n  };\n};\n\nconst createNumber = (numObject) => {\n  return {\n    type: \"CREATE_NUMBER\",\n    payload: numObject,\n  };\n};\n\nconst filterName = (nameObject) => {\n  return {\n    type: \"SET_FILTER\",\n    payload: nameObject,\n  };\n};\n\nexport default { addUser, deleteUser, addNumber, deleteNumber, createNumber, filterName};\n","import {\n  getOrdersRequest,\n  getOrdersSuccess,\n  getOrdersError,\n  addOrderRequest,\n  addOrderSuccess,\n  addOrderError,\n  deleteOrderRequest,\n  deleteOrderSuccess,\n  deleteOrderError,\n} from './actions'\n\nimport axios from 'axios'\naxios.defaults.baseURL = `http://localhost:4000`\n\nconst getOrders = () => (dispatch) => {\n  dispatch(getOrdersRequest())\n  return axios\n    .get('/contacts')\n    .then(({ data }) => {\n      console.log('getOrdersSuccess', data)\n      return dispatch(getOrdersSuccess(data))\n    })\n    .catch((error) => {\n      return dispatch(getOrdersError(error))\n    })\n}\n\nconst addOrder = (contacts) => (dispatch) => {\n  dispatch(addOrderRequest())\n  axios\n    .post('/contacts', contacts)\n    .then(({ data }) => {\n      console.log('addOrderSuccess', data)\n      return dispatch(addOrderSuccess(data))\n    })\n    .catch((error) => {\n      return dispatch(addOrderError(error))\n    })\n}\n\n// const updateOrder = (id) => dispatch =>{\n//     dispatch()\n//     axios.update('/')\n// }\n\nconst deleteOrder = (id) => (dispatch) => {\n  dispatch(deleteOrderRequest())\n  axios\n    .delete(`/contacts/${id}`)\n    .then(({ data }) => {\n      console.log('DELETE from deleteOrder', data)\n      return dispatch(deleteOrderSuccess(id))\n    })\n    .catch((error) => {\n      return dispatch(deleteOrderError(error))\n    })\n}\n\nexport default { getOrders, addOrder, deleteOrder }\n","import { createSelector } from '@reduxjs/toolkit'\n\nexport const getOrders = (store) => { return store.contacts}\nexport const filterOrder = (store) => store.filterOrder\n\nexport const filteredOrders = createSelector(\n  [getOrders, filterOrder],\n  (allOrders, filter) => {\n    filter = filter.toLowerCase()\n    return allOrders.filter(({ name }) => name.toLowerCase().includes(filter))\n  },\n)\n\n// const filteredData = createSelector([getOrders, filter], (orders, filter) => {\n//   orders.filter((order) => order.name === filter)\n// })\n\nexport default {getOrders, filterOrder, filteredOrders}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"listBtn\":\"ContactList_listBtn__3aXXE\",\"listLi\":\"ContactList_listLi__28toc\"};","import { createAction } from '@reduxjs/toolkit'\n\nconst getQueryVAlue = createAction('GET_QUERY_VALUE')\nconst getFetchCocktails = createAction('GET_FETCH_COCKTEILS')\nconst changeShowModal = createAction('MODAL')\n\nexport default { getQueryVAlue, getFetchCocktails, changeShowModal }\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"../Main/Main.module.css\";\nimport { Link} from 'react-router-dom'\n\nfunction Main({ title }) {\n\n  return (\n    <main>\n      <Link to=\"/\" exact=\"true\"><h1 className={style.center }>{title ? title : 'Home'}</h1></Link>\n    </main>\n  );\n}\n\nexport default Main;\n\nMain.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Main_center__2k4H9\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { v4 as id } from \"uuid\";\nimport style from \"./ContactForm.module.css\";\n\nimport { connect } from \"react-redux\";\nimport userAction from \"../../redux/actions/userAction\";\nimport operations from '../../redux/orders/operations';\nimport { getOrders } from '../../redux/orders/selectors';\n// console.log(getOrders)\n// console.log(operations)\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    tel: \"\",\n    id: '',\n  };\n\n  handleChange = (e) => {\n    const { getValue } = this.props;\n\n    getValue(e.target);\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    const { contacts} = this.props;\n    e.preventDefault();\n    const { name, tel } = this.state;\n    const el = { id: id(), name, tel };\n\n    if (!contacts.some((c) => c.name === el.name)){\n \n      // this.props.addNumber(el);\n    \n    this.props.addMyOrder(el)\n    \n  }\n    else {alert(`Увага дане імя уже використовується!` )}\n\n    this.formReset();\n  };\n\n  formReset = () => { \n    this.setState({\n      name: \"\",\n      tel: \"\",\n    });\n  }\n\n  render() {\n    const { handleChange, handleSubmit, handleDelete, filterSubmit } = this;\n    const { name, tel} = this.state;\n    const { myOrders, addNumber} = this.props\n    return (\n      <form onSubmit={handleSubmit} className={style.form}>\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          placeholder=\"Ім'я\"\n          value={name}\n          required\n        />\n        <input\n          onChange={handleChange}\n          type=\"number\"\n          name=\"tel\"\n          id=\"tel\"\n          placeholder=\"номер телефону\"\n          value={tel}\n\n          required\n        />\n        <button type=\"submit\" >Додати</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  getValue: PropTypes.func.isRequired,\n  // addContact: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = (store) => {\n  // console.log(\"store in contact form\", store);\n\n  return {\n    // contacts: store.contacts,\n    contacts: getOrders(store),\n  };\n};\n\nconst mapDispatchToProps = {\n  addNumber: userAction.addNumber,\n  // addNumber: operations.addOrder,\n  addMyOrder: operations.addOrder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\"};","import React from \"react\";\nimport style from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nimport { connect } from \"react-redux\";\nimport userAction from \"../../redux/actions/userAction\";\nimport operations from '../../redux/orders/operations';\nimport { getOrders } from '../../redux/orders/selectors';\n\nconst ContactList = ({ contacts, delnum, filter, filteredContacts, deleteMyOrder, getMyOrders}) => {\n  // console.log(\"contacts\", contacts);\n  // console.log(\"deleteMyOrder\", deleteMyOrder);\n  // console.log(\"filter\", filter);\n\n  // const handleDelete = (id) => {\n  //   this.props.deleteMyOrder(id)\n  //   // this.props.getMyOrders()\n  // }\n\n  return (\n    <>\n    \n      {contacts.length > 0 ? (\n        <ul className={style.list}>\n          {contacts.filter(element => {\n            if (!filter) {\n              return true\n            }\n            return element.name.toLowerCase().includes(filter);\n          }).map((el) => (\n            <li className={style.listLi} key={el.id} >\n            <span>{el.name}:</span><span>{el.tel}</span>\n            {/* <span><button className={style.listBtn} onClick={() => delnum(el.id)}>Видалити</button></span> */}\n            <span><button className={style.listBtn} onClick={() => deleteMyOrder(el.id)}>Видалити</button></span>\n            \n            </li>\n          ))}\n        </ul>\n      ): <ul className={style.list}>\n          <li className={style.listLi} >У вас порожній список !</li>\n        </ul>}\n    </>\n  );\n};\n\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      tel: PropTypes.string.isRequired,\n    })\n  ),\n\n};\n\n\nconst mapStateToProps = (store) => {\n  // console.log(\"store contact list\", store);\n\n  return {\n    contacts: store.contacts,\n    filter: store.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  delnum: userAction.deleteNumber,\n  deleteMyOrder: operations.deleteOrder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Filter.module.css\";\n\nimport { connect } from \"react-redux\";\nimport userAction from \"../../redux/actions/userAction\";\nimport { filteredOrders } from '../../redux/orders/selectors';\nimport { filterAction } from '../../redux/orders/actions'\n\nclass Filter extends Component {\n  state = {\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    const { filterName} = this.props;\n    this.setState({ [e.target.name]: e.target.value });\n    filterName(e.target.value);\n  };\n\n  filterSubmit = (e) => {\n    e.preventDefault()\n    this.props.getMyFilter(this.state.filter)\n  }\n\n  render() {\n    const { handleChange, filterSubmit } = this;\n   \n    const { filter, filteredOrders } = this.props;\n    return (\n      <>         \n      <div className={style.filter}>Ваш останній запит {filter} </div> \n      <form className={style.form} onSubmit={filterSubmit}>\n        <input\n          id=\"filter\"\n          className={style.filter}\n          onInput={handleChange}\n          onChange={(e) => {\n                  this.setState({ filter: e.target.value })\n                  this.props.getMyFilter(e.target.value)\n                }}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Введіть імя\"\n          defaultValue={filter}\n          // onSubmit={filterSubmit}\n        />\n      </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  // console.log(\"store filter\", store);\n\n  return {\n    contacts: store.contacts,\n    // filter: store.filter,\n    filter: store.filter,\n  };\n};\n\nconst mapDispatchToProps = {\n  filterName: userAction.filterName,\n  getMyFilter: filterAction,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.propTypes = {\n  // filterContact: PropTypes.func.isRequired,\n};\n\n","const filterName = (nameObject) => {\n    return {\n      type: \"SET_FILTER\",\n      payload: nameObject,\n    };\n  };\n  \n  const claearFilter = (nameObject) => {\n    return {\n      type: \"CLEAR_FILTER\",\n      payload: nameObject,\n    };\n  };\n  \n  export default { filterName, claearFilter};\n  ","import \"./App.css\";\nimport React, { Component, Suspense } from \"react\";\nimport axios from 'axios'\nimport Main from \"./components/Main/Main\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nimport { connect } from \"react-redux\";\nimport addUserAction from \"./redux/actions/userAction\";\nimport filterAction from \"./redux/actions/filterAction\";\nimport actions from './redux/modal/actions';\nimport operations from './redux/orders/operations';\nimport { getOrders, filteredOrders } from './redux/orders/selectors';\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n  \n  addContact = (el) => {\n    console.log(\"add contact check\",this.props)\n    const { contacts } = this.props;\n    const twin = contacts.some((c) => c.name === el.name);\n    twin\n      ? alert(`Увага дане імя уже використовується!` )\n      : this.setState((prev) => {\n          return {\n            // contacts: [...prev.contacts, el],\n          };\n        });\n  };\n\n  getValue = (el) => {\n    this.setState({ [el.name]: el.value });\n  };\n\n  toGetFilteredContacts = () => {\n    const { contacts, filter } = this.props;\n    const filteredContacts = contacts.filter((el) => {\n      return el.name.toLowerCase().includes(filter);\n    });\n\n    return filteredContacts;\n  };\n\n  getList = () => {\n    const { contacts, filter } = this.state;\n    const filteredContacts = this.toGetFilteredContacts();\n    if (filter) return filteredContacts;\n    return contacts;\n  };\n\n  toDelete = (id) => {\n    this.setState((prev) => {\n      const contacts = prev.contacts.filter((el) => !(el.id === id));\n      return { contacts };\n    });\n  };\n\n  componentDidMount() {\n    console.log(\"---------------\",this.props.getMyOrders)\n    const contactLocalStorege = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contactLocalStorege) {\n      this.setState(() => ({ contacts: [...contactLocalStorege] }));\n      return;\n    }\n    this.props.getMyOrders()\n    \n// axios.defaults.baseURL = `http://localhost:4000`\n// axios\n//     .get('/contacts')\n//     .then(({ data }) => {\n//       console.log('+++++++++s', data)\n//        })\n//     .catch((error) => {\n//       console.log('+++++---------++++s', error)\n//     })\n\n\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { getValue, getList} = this;\n    const {\n      myOrders,\n      addMyOrder,\n      getMyOrders,\n      deleteMyOrder,\n      getMyFilter,\n      filteredOrders,\n} = this.props\n    // console.log(\"this.props.getMyOrders\", this.props.getMyOrders())\n    // console.log(\"this.props\", this.props);\n    // console.log(\"this.props.contacts\", this.props.contacts);\n\n    return (\n      <div className=\"App\">\n        <Main title=\"Телефонна книжка v.1.4\"/>\n        <ContactForm  \n          getValue={getValue} \n          myOrders={myOrders}\n          addMyOrder={addMyOrder}\n          getMyOrders={getMyOrders}\n          \n          \n        />\n        <h2 className=\"pApp\">Пошук контактів </h2>\n        <Filter \n          filterContact={getValue} \n          getMyOrders={getMyOrders}\n          getMyFilter={getMyFilter}\n          filteredOrders={filteredOrders}\n        />\n        <ContactList \n          contacts={getList()}\n          getMyOrders={getMyOrders} \n          deleteMyOrder={deleteMyOrder}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  console.log(\"store\", store);\n\n  return {\n    // contacts: store.contacts,\n    filter : store.filteredContacts,\n    contacts: getOrders(store)\n  };\n};\n\nconst mapDispatchToProps = {\n  adnum: addUserAction.addNumber,\n  delnum: addUserAction.deleteNumber,\n  filter: filterAction.filter,\n  myChangeModal: actions.changeShowModal,\n  getMyOrders: operations.getOrders,\n  addMyOrder: operations.addOrder,\n  deleteMyOrder: operations.deleteOrder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createAction } from '@reduxjs/toolkit'\n\nexport const getOrdersRequest = createAction('GET_ORDERS_REQUEST')\nexport const getOrdersSuccess = createAction('GET_ORDERS_SUCCESS')\nexport const getOrdersError = createAction('GET_ORDERS_ERROR')\n\nexport const addOrderRequest = createAction('ADD_ORDER_REQUEST')\nexport const addOrderSuccess = createAction('ADD_ORDER_SUCCESS')\nexport const addOrderError = createAction('ADD_ORDER_ERROR')\n\nexport const updateOrderRequest = createAction('UPDATE_ORDER_REQUEST')\nexport const updateOrderSuccess = createAction('UPDATE_ORDER_SUCCESS')\nexport const updateOrderError = createAction('UPDATE_ORDER_ERROR')\n\nexport const deleteOrderRequest = createAction('DELETE_ORDER_REQUEST')\nexport const deleteOrderSuccess = createAction('DELETE_ORDER_SUCCESS')\nexport const deleteOrderError = createAction('DELETE_ORDER_ERROR')\n\nexport const filterAction = createAction('FILTER_ORDERS')\n","const userReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"CREATE_NUMBER\":\n      console.log(`CREATE_NUMBER`);\n      const newStateNumber = action.payload;\n      return newStateNumber;  \n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n","const init = [];\n// const temp = [   {id: \"1\", name: 'Любомир', tel: '050 187 13 16'},\n//   {id: \"2\", name: 'Rosie Simpson', tel: '459-12-56'},\n//   {id: \"3\", name: 'Hermione Kline', tel: '443-89-12'},\n//   {id: \"4\", name: 'Eden Clements', tel: '645-17-79'},\n//   {id: \"5\", name: 'Annie Copeland', tel: '227-91-26'}]\n\nconst allUsersReducer = (state = init, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"ADD_USER\":\n      const newS = [...state, payload];\n      console.log(\"ADD_USER\", newS);\n      return newS;\n\n    case \"DELETE_USER\":\n      const newSt = state.filter((elem) => elem.email !== payload);\n      console.log(newSt);\n      return newSt;\n\n    case \"ADD_NUMBER\":\n      const newAddN = [...state, payload];\n      console.log(\"ADD_NUMBER\", newAddN);\n      return newAddN;\n\n    case \"DELETE_NUMBER\":\n      const newDelN = state.filter((elem) => elem.id !== payload);\n      console.log(\"DELETE_NUMBER\", newDelN);\n      return newDelN; \n\n    // case \"FILTER_NAME\":\n    //   console.log(\"FILTER_NAME before\", state); \n    //   const newFilter = state.filter((elem) => {\n    //     return elem.name.toLowerCase().includes(payload);\n    //   });\n    //   console.log(\"FILTER_NAME after\", state);\n\n    //   // if (newFilter !== state) return newFilter; \n    //   return newFilter;\n  \n    default:\n      return state;\n  }\n};\n\nexport default allUsersReducer;\n","const init = \"\";\n\n\nconst filterReducer = (state = init, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case \"SET_FILTER\":\n      return payload;\n    \n    case \"CLEAR_FILTER\":\n      return \"\";\n      \n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { createReducer } from '@reduxjs/toolkit'\nimport actions from './actions'\n\n\nconst modalReducer = createReducer(false, {\n    [actions.changeShowModal]: (_, { payload }) => payload,\n  })\nexport default { modalReducer }\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  getOrdersRequest,\n  getOrdersSuccess,\n  getOrdersError,\n  addOrderRequest,\n  addOrderSuccess,\n  addOrderError,\n  deleteOrderRequest,\n  deleteOrderSuccess,\n  deleteOrderErrors,\n  filterAction,\n} from './actions'\n\nconst orderReducer = createReducer([], {\n  [getOrdersSuccess]: (_, { payload }) => payload,\n  [addOrderSuccess]: (state, { payload }) => [...state, payload],\n  [deleteOrderSuccess]: (state, { payload }) =>\n    state.filter((order) => order.id !== payload),\n})\n\nconst filterReducer = createReducer('', {\n  [filterAction]: (_, { payload }) => payload,\n})\n\nexport default { orderReducer, filterReducer }\n","import { createStore, combineReducers } from \"redux\";\nimport userReducer from \"../redux/reducers/userReducers\";\nimport allUsersReducer from \"./reducers/allUsersReducer\";\nimport filterReducer from \"./reducers/filterReducer\";\n// import function create store\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { persistReducer, persistStore } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n// export store\nimport reducers from './modal/reducers'\nimport orderReducer from './orders/reducers'\n\n\nconst rootReducer = combineReducers({\n  filter: filterReducer,\n  contacts: allUsersReducer,\n  user: userReducer,\n  showModal: reducers.modalReducer,\n  mycontacts: orderReducer.orderReducer,\n  filterOrder: orderReducer.filterReducer,\n}, localStorage.contacts);\n\nconst persistedState = localStorage.getItem('reduxState')\n  ? JSON.parse(localStorage.getItem('reduxState'))\n  : {}\n\n// const store = createStore(\n//   rootReducer,\n//   persistedState //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n\nconst store = configureStore({\n  reducer: {\n    showModal: reducers.modalReducer,\n\n    contacts: orderReducer.orderReducer,\n    filterOrder: orderReducer.filterReducer,\n  },\n  middleware: [\n    ...getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n  ],\n})\n\nstore.subscribe(()=>{\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nconst persiststore = persistStore(store)\nexport { store, persiststore }\n","import { lazy } from 'react'\nimport { v4 as uuid } from 'uuid'\n\nconst routes = [\n  {\n    key: uuid(),\n    exact: true,\n    path: '/',\n    // path: `${match.url}`,\n    component: lazy(() => import('./redux/Container/Container')),\n    private: true,\n    restricted: true,\n  },\n  {\n    key: uuid(),\n    exact: true,\n    path: '/contacts',\n    // path: `${match.url}`,\n    component: lazy(() => import('./components/ContactList/ContactList')),\n    private: true,\n    restricted: true,\n  },\n  {\n    key: uuid(),\n    exact: true,\n    path: '/addcontact',\n    // path: `${match.url}`,\n    component: lazy(() => import('./components/ContactForm/ContactForm')),\n    private: true,\n    restricted: true,\n  },\n  {\n    key: uuid(),\n    exact: true,\n    path: '/test',\n    // path: `${match.url}`,\n    component: lazy(() => import('./components/Main/Main')),\n    private: true,\n    restricted: true,\n  },\n]\nexport default routes\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { store, persiststore } from \"./redux/store\";\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Switch, Route, Link} from 'react-router-dom';\nimport { withRouter } from 'react-router-dom';\nimport routes from './routes';\nReactDOM.render(\n  <Provider store={store}>\n    {/* <PersistGate persistor={persiststore} loading={null}> */}\n      <Router>\n        <React.StrictMode>\n        <Suspense fallback=\"Waiting...\">\n        <Switch>\n          {routes.map((route) => (\n            <Route {...route} />\n          ))}\n        </Switch>\n      </Suspense>\n          {/* <App /> */}\n        </React.StrictMode>\n      </Router>\n    {/* </PersistGate> */}\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}